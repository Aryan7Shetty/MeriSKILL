# -*- coding: utf-8 -*-
"""Meriskill_P2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NsfuK1HSOkgTaX4C1rbXjXwBiFovk_0b
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('diabetes.csv')
df

# Check for missing values in the dataset
missing_values = df.isnull().sum()
print(missing_values)

# Display columns with missing values (if any)
missing_columns = missing_values[missing_values > 0]
print("Columns with missing values:")
print(missing_columns)

# Create a correlation matrix
corr_matrix = df.corr()

# Print the correlation matrix
print(corr_matrix)

# Set the size of the plot
plt.figure(figsize=(10, 8))

# Generate a heatmap
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f')

# Set the title of the heatmap
plt.title('Correlation Heatmap of Pima Indians Diabetes Dataset')

# Display the heatmap
plt.show()

# Split the data into features (X) and target variable (Y)
X = df.drop('Outcome', axis=1)
Y = df['Outcome']

# Split the data into training and testing sets
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

# Standardize the data
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Train a logistic regression model
model = LogisticRegression()
model.fit(X_train, Y_train)

# Make predictions on the test set
Y_pred = model.predict(X_test)
Y_pred

# Evaluate the model
accuracy = accuracy_score(Y_test, Y_pred)
accuracy

# Install Django
import django

# Create a new Django project
!django-admin startproject diabetes_prediction

# Ensure os module is imported in settings.py
import os

settings_path = '/content/diabetes_prediction/diabetes_prediction/settings.py'
with open(settings_path, 'r') as file:
    lines = file.readlines()

if "import os" not in lines:
    lines.insert(0, "import os\n")

with open(settings_path, 'w') as file:
    file.writelines(lines)

# Set up ngrok authtoken
from pyngrok import ngrok

# Replace 'YOUR_AUTHTOKEN' with your actual ngrok authtoken
authtoken = "2ggAxUbfvVYqaGnwDh2IkWLce49_7q66HHFM5pAr8gbWGKo8r"
ngrok.set_auth_token(authtoken)

# Apply migrations
!python diabetes_prediction/manage.py migrate

# Change directory and run the Django development server
!python diabetes_prediction/manage.py runserver 0.0.0.0:8000 &

# Set up a tunnel for port 8000
public_url = ngrok.connect(8000)
print('Public URL:', public_url)